spring:
  application:
    name: booking-service

  datasource:
    url: jdbc:postgresql://localhost:5432/booking-service
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always

  kafka:
    bootstrap-servers: host.docker.internal:9092
    consumer:
      group-id: booking-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # Delegate deserializer to real JSON deserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  metrics:
    tags:
      application: booking-service

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

server:
  port: 4008
